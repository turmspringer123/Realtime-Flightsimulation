/// <reference types="node" />
import { Message, TOPIC } from '../../constants';
import { EventEmitter } from 'events';
import { DeepstreamClusterNode, DeepstreamPlugin, DeepstreamServices, DeepstreamConfig } from '@deepstream/types';
export declare class VerticalClusterNode extends DeepstreamPlugin implements DeepstreamClusterNode {
    private services;
    private config;
    description: string;
    private isReady;
    static emitter: EventEmitter;
    private callbacks;
    constructor(pluginConfig: any, services: DeepstreamServices, config: DeepstreamConfig);
    init(): void;
    whenReady(): Promise<void>;
    send(message: Message, metaData?: any): void;
    sendDirect(serverName: string, message: Message, metaData?: any): void;
    subscribe<SpecificMessage>(stateRegistryTopic: TOPIC, callback: (message: SpecificMessage, originServerName: string) => void): void;
    close(): Promise<void>;
}

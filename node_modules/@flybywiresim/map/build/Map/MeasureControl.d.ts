/// <reference types="react" />
import 'leaflet.polylinemeasure';
import * as L from 'leaflet';
declare type Unit = 'metres' | 'landmiles' | 'nauticalmiles';
declare type UnitControlTitle = {
    text: string;
    metres: string;
    landmiles: string;
    nauticalmiles: string;
};
declare type UnitControlLabel = {
    metres: string;
    kilometres: string;
    feet: string;
    landmiles: string;
    nauticalmiles: string;
};
declare type LineStyle = {
    color: string;
    weight: number;
};
declare type CircleStyle = {
    color: string;
    weight: number;
    fillColor: string;
    fillOpacity: number;
    radius: number;
};
export declare const MeasureControl: import("react").ForwardRefExoticComponent<Partial<{
    position: L.ControlPosition;
    unit: Unit;
    clearMeasurementsOnStop: boolean;
    showBearings: boolean;
    bearingTextIn: string;
    bearingTextOut: string;
    tooltipTextFinish: string;
    tooltipTextDelete: string;
    tooltipTextMove: string;
    tooltipTextResume: string;
    tooltipTextAdd: string;
    measureControlTitleOn: string;
    measureControlTitleOff: string;
    measureControlLabel: string;
    measureControlClasses: string[];
    showClearControl: boolean;
    clearControlTitle: string;
    clearControlLabel: string;
    clearControlClasses: string[];
    showUnitControl: boolean;
    distanceShowSameUnit: boolean;
    unitControlTitle: UnitControlTitle;
    unitControlLabel: UnitControlLabel;
    tempLine: LineStyle;
    fixedLine: LineStyle;
    startCircle: CircleStyle;
    intermedCircle: CircleStyle;
    currentCircle: CircleStyle;
    endCircle: CircleStyle;
}> & import("react").RefAttributes<L.Control>>;
export {};

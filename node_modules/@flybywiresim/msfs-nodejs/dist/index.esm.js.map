{"version":3,"file":"index.esm.js","sources":["../src/simconnect/connection.ts","../src/simconnect/constants/clientdata.ts","../src/simconnect/constants/simulatordata.ts","../src/simconnect/dataareas/clientdataarea.ts","../src/simconnect/dataareas/simulatordataarea.ts","../src/simconnect/dispatcher.ts","../src/simconnect/receiver.ts"],"sourcesContent":["const simconnect = require('./libs/simconnect');\r\n\r\nexport interface Connection {\r\n    open(clientName: string): boolean;\r\n    close(): void;\r\n    isConnected(): boolean;\r\n    lastError(): string;\r\n}\r\n\r\nexport const Connection: {\r\n    new(): Connection\r\n} = simconnect.ConnectionBindings;\r\n","export const ClientDataOffsetAuto = -1;\n\nexport const ClientDataMaxSize = 8192;\n\nexport enum ClientDataType {\n    Int8 = -1,\n    Int16 = -2,\n    Int32 = -3,\n    Int64 = -4,\n    Float32 = -5,\n    Float64 = -6\n}\n\nexport enum ClientDataPeriod {\n    Never = 0,\n    Once = 1,\n    VisualFrame = 2,\n    OnSet = 3,\n    Second = 4,\n}\n\nexport enum ClientDataRequest {\n    Default = 0,\n    Changed = 1,\n    Tagged = 2,\n}\n","export enum SimulatorDataType {\n    Invalid = 0,\n    Int32 = 1,\n    Int64 = 2,\n    Float32 = 3,\n    Float64 = 4,\n    String8 = 5,\n    String32 = 6,\n    String64 = 7,\n    String128 = 8,\n    String256 = 9,\n    String260 = 10,\n    StringVariable = 11,\n    InitPosition = 12,\n    MarkerState = 13,\n    Waypoint = 14,\n    LatLongAlt = 15,\n    XYZ = 16,\n}\n\nexport enum SimulatorDataPeriod {\n    Never = 0,\n    Once = 1,\n    VisualFrame = 2,\n    SimFrame = 3,\n    Second = 4,\n}\n\nexport enum SimulatorDataWaypointFlags {\n    SpeedRequested = 0x04,\n    ThrottleRequested = 0x08,\n    ComputeVerticalSpeed = 0x10,\n    AltitudeIsAGL = 0x20,\n    OnGround = 0x00100000,\n    Reverse = 0x00200000,\n    WrapToFirst = 0x00400000,\n}\n","import { Connection } from '../connection';\nimport { ClientDataDefinition } from '../types';\n\nconst simconnect = require('./libs/simconnect');\n\nexport interface ClientDataArea {\n    mapNameToId(clientDataName: string): boolean;\n    allocateArea(size: number, readOnly: boolean): boolean;\n    addDataDefinition(definition: ClientDataDefinition): boolean;\n    setData(data: object): boolean;\n    lastError(): string;\n}\n\nexport const ClientDataArea: {\n    new(connection: Connection, clientDataId: number): ClientDataArea,\n} = simconnect.ClientDataAreaBindings;\n","import { Connection } from '../connection';\nimport { SimulatorDataDefinition } from '../types';\n\nconst simconnect = require('./libs/simconnect');\n\nexport interface SimulatorDataArea {\n    addDataDefinition(dataDefinition: SimulatorDataDefinition): boolean;\n    lastError(): string;\n}\n\nexport const SimulatorDataArea: {\n    new(connection: Connection, simulatorDataId: number): SimulatorDataArea,\n} = simconnect.SimulatorDataAreaBindings;\n","import { Connection } from './connection';\nimport { ClientDataPeriod, ClientDataRequest, SimulatorDataPeriod } from './constants';\nimport { ClientDataArea, SimulatorDataArea } from './dataareas';\nimport { DispatcherResponse } from './types';\n\nconst simconnect = require('./libs/simconnect');\n\nexport interface Dispatcher {\n    requestClientData(clientData: ClientDataArea, period: ClientDataPeriod, request: ClientDataRequest): boolean;\n    requestSimulatorData(simulatorData: SimulatorDataArea, period: SimulatorDataPeriod): boolean;\n    nextDispatch(): DispatcherResponse;\n    lastError(): string;\n}\n\nexport const Dispatcher: {\n    new(connection: Connection): Dispatcher\n} = simconnect.DispatcherBindings;\n","import { Connection } from './connection';\nimport { ClientDataPeriod, ClientDataRequest, SimulatorDataPeriod } from './constants';\nimport { ClientDataArea, SimulatorDataArea } from './dataareas';\nimport { Dispatcher } from './dispatcher';\nimport {\n    ClientDataRequestMessage,\n    ErrorMessage,\n    ExceptionMessage,\n    OpenMessage,\n    SimulatorDataRequestMessage,\n} from './types';\n\nexport type ReceiverCallbacks = {\n    open: (message: OpenMessage) => void;\n    quit: () => void;\n    clientData: (message: ClientDataRequestMessage) => void;\n    simulatorData: (message: SimulatorDataRequestMessage) => void;\n    exception: (message: ExceptionMessage) => void;\n    error: (message: ErrorMessage) => void;\n}\n\nexport class Receiver {\n    private dispatcher: Dispatcher = null;\n\n    private interval: NodeJS.Timer = null;\n\n    private callbacks: ReceiverCallbacks = {\n        open: null,\n        quit: null,\n        clientData: null,\n        simulatorData: null,\n        exception: null,\n        error: null,\n    }\n\n    constructor(connection: Connection) {\n        this.dispatcher = new Dispatcher(connection);\n    }\n\n    private processDispatch(): void {\n        const response = this.dispatcher.nextDispatch();\n        if (response === null) return;\n\n        switch (response.type) {\n        case 'open':\n            if (this.callbacks.open !== null) this.callbacks.open(response.data as OpenMessage);\n            break;\n        case 'quit':\n            if (this.callbacks.quit !== null) this.callbacks.quit();\n            break;\n        case 'clientData':\n            if (this.callbacks.clientData !== null) this.callbacks.clientData(response.data as ClientDataRequestMessage);\n            break;\n        case 'simulatorData':\n            if (this.callbacks.simulatorData !== null) this.callbacks.simulatorData(response.data as SimulatorDataRequestMessage);\n            break;\n        case 'exception':\n            if (this.callbacks.exception !== null) this.callbacks.exception(response.data as ExceptionMessage);\n            break;\n        case 'error':\n            if (this.callbacks.error !== null) this.callbacks.error(response.data as ErrorMessage);\n            break;\n        default:\n            throw Error('Unknown message type in the dispatcher');\n        }\n    }\n\n    public addCallback<K extends keyof ReceiverCallbacks>(event: K, callback: ReceiverCallbacks[K]): void {\n        this.callbacks[event] = callback;\n    }\n\n    public start(): void {\n        if (this.interval === null) {\n            this.interval = setInterval(() => this.processDispatch(), 50);\n        }\n    }\n\n    public stop(): void {\n        if (this.interval !== null) {\n            clearInterval(this.interval);\n            this.interval = null;\n        }\n    }\n\n    public requestClientData(clientData: ClientDataArea, period: ClientDataPeriod, request: ClientDataRequest): boolean {\n        return this.dispatcher.requestClientData(clientData, period, request);\n    }\n\n    public requestSimulatorData(simulatorData: SimulatorDataArea, period: SimulatorDataPeriod): boolean {\n        return this.dispatcher.requestSimulatorData(simulatorData, period);\n    }\n}\n"],"names":["simconnect"],"mappings":"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"}
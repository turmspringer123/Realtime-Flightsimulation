{"version":3,"file":"compile-gatsby-files.js","names":["COMPILED_CACHE_DIR","PARCEL_CACHE_DIR","gatsbyFileRegex","RETRY_COUNT","getCacheDir","siteRoot","exponentialBackoff","retry","Promise","resolve","timeout","Math","pow","setTimeout","constructParcel","Parcel","entries","defaultConfig","require","mode","targets","root","outputFormat","includeNodeModules","sourceMap","engines","node","distDir","cacheDir","compileGatsbyFiles","files","readdir","nearMatch","configName","file","name","path","parse","isNearMatch","isTSX","endsWith","reporter","panic","id","context","ensureDir","emptyDir","parcel","bundleGraph","run","bundles","getBundles","length","compiledTSFilesCount","bundle","cache","filePath","e","retries","compiledFileLocation","sourceFileLocation","getMainEntry","verbose","message","remove","mainEntry","telemetry","isTrackingEnabled","trackCli","valueInteger","error","diagnostics","handleErrors","sourceMessage","forEach","err","codeFrames","c","codeHighlightsMessage","codeHighlights","specificMessage","undefined","generalMessage","origin","hints","getResolvedFieldsForPlugin","rootDir","pluginName","resolvedCompiledGatsbyNode","findCompiledLocalPluginModule","moduleName","compiledPathForPlugin","compiledPathForModule","isCompiled","existsSync"],"sources":["../../../src/utils/parcel/compile-gatsby-files.ts"],"sourcesContent":["import { Parcel } from \"@parcel/core\"\nimport path from \"path\"\nimport type { Diagnostic } from \"@parcel/diagnostic\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { ensureDir, emptyDir, existsSync, remove, readdir } from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\nimport { isNearMatch } from \"../is-near-match\"\n\nexport const COMPILED_CACHE_DIR = `.cache/compiled`\nexport const PARCEL_CACHE_DIR = `.cache/.parcel-cache`\nexport const gatsbyFileRegex = `gatsby-+(node|config).ts`\nconst RETRY_COUNT = 5\n\nfunction getCacheDir(siteRoot: string): string {\n  return `${siteRoot}/${PARCEL_CACHE_DIR}`\n}\n\nfunction exponentialBackoff(retry: number): Promise<void> {\n  if (retry === 0) {\n    return Promise.resolve()\n  }\n  const timeout = 50 * Math.pow(2, retry)\n  return new Promise(resolve => setTimeout(resolve, timeout))\n}\n\n/**\n * Construct Parcel with config.\n * @see {@link https://parceljs.org/features/targets/}\n */\nexport function constructParcel(siteRoot: string): Parcel {\n  return new Parcel({\n    entries: [\n      `${siteRoot}/${gatsbyFileRegex}`,\n      `${siteRoot}/plugins/**/${gatsbyFileRegex}`,\n    ],\n    defaultConfig: require.resolve(`gatsby-parcel-config`),\n    mode: `production`,\n    targets: {\n      root: {\n        outputFormat: `commonjs`,\n        includeNodeModules: false,\n        sourceMap: false,\n        engines: {\n          node: `>= 14.15.0`,\n        },\n        distDir: `${siteRoot}/${COMPILED_CACHE_DIR}`,\n      },\n    },\n    cacheDir: getCacheDir(siteRoot),\n  })\n}\n\n/**\n * Compile known gatsby-* files (e.g. `gatsby-config`, `gatsby-node`)\n * and output in `<SITE_ROOT>/.cache/compiled`.\n */\nexport async function compileGatsbyFiles(\n  siteRoot: string,\n  retry: number = 0\n): Promise<void> {\n  try {\n    // Check for gatsby-node.jsx and gatsby-node.tsx (or other misnamed variations)\n    const files = await readdir(siteRoot)\n\n    let nearMatch = ``\n    const configName = `gatsby-node`\n\n    for (const file of files) {\n      if (nearMatch) {\n        break\n      }\n\n      const { name } = path.parse(file)\n      // Of course, allow valid gatsby-node files\n      if (file === `gatsby-node.js` || file === `gatsby-node.ts`) {\n        break\n      }\n\n      if (isNearMatch(name, configName, 3)) {\n        nearMatch = file\n      }\n    }\n\n    // gatsby-node is misnamed\n    if (nearMatch) {\n      const isTSX = nearMatch.endsWith(`.tsx`)\n      reporter.panic({\n        id: `10128`,\n        context: {\n          configName,\n          nearMatch,\n          isTSX,\n        },\n      })\n    }\n\n    const distDir = `${siteRoot}/${COMPILED_CACHE_DIR}`\n    await ensureDir(distDir)\n    await emptyDir(distDir)\n\n    await exponentialBackoff(retry)\n\n    const parcel = constructParcel(siteRoot)\n    const { bundleGraph } = await parcel.run()\n\n    await exponentialBackoff(retry)\n\n    const bundles = bundleGraph.getBundles()\n\n    if (bundles.length === 0) return\n\n    let compiledTSFilesCount = 0\n    for (const bundle of bundles) {\n      // validate that output exists and is valid\n      try {\n        delete require.cache[bundle.filePath]\n        require(bundle.filePath)\n      } catch (e) {\n        if (retry >= RETRY_COUNT) {\n          reporter.panic({\n            id: `11904`,\n            context: {\n              siteRoot,\n              retries: RETRY_COUNT,\n              compiledFileLocation: bundle.filePath,\n              sourceFileLocation: bundle.getMainEntry()?.filePath,\n            },\n          })\n        } else if (retry > 0) {\n          // first retry is most flaky and it seems it always get in good state\n          // after that - most likely cache clearing is the trick that fixes the problem\n          reporter.verbose(\n            `Failed to import compiled file \"${\n              bundle.filePath\n            }\" after retry, attempting another retry (#${\n              retry + 1\n            } of ${RETRY_COUNT}) - \"${e.message}\"`\n          )\n        }\n\n        // sometimes parcel cache gets in weird state\n        await remove(getCacheDir(siteRoot))\n\n        await compileGatsbyFiles(siteRoot, retry + 1)\n        return\n      }\n\n      const mainEntry = bundle.getMainEntry()?.filePath\n      // mainEntry won't exist for shared chunks\n      if (mainEntry) {\n        if (mainEntry.endsWith(`.ts`)) {\n          compiledTSFilesCount = compiledTSFilesCount + 1\n        }\n      }\n    }\n\n    if (telemetry.isTrackingEnabled()) {\n      telemetry.trackCli(`PARCEL_COMPILATION_END`, {\n        valueInteger: compiledTSFilesCount,\n        name: `count of compiled ts files`,\n      })\n    }\n  } catch (error) {\n    if (error.diagnostics) {\n      handleErrors(error.diagnostics)\n    } else {\n      reporter.panic({\n        id: `11903`,\n        error,\n        context: {\n          siteRoot,\n          sourceMessage: error.message,\n        },\n      })\n    }\n  }\n}\n\nfunction handleErrors(diagnostics: Array<Diagnostic>): void {\n  diagnostics.forEach(err => {\n    if (err.codeFrames) {\n      err.codeFrames.forEach(c => {\n        // Assuming that codeHighlights only ever has one entry in the array. Local tests only ever showed one\n        const codeHighlightsMessage = c?.codeHighlights[0]?.message\n        // If both messages are the same don't print the specific, otherwise they would be duplicate\n        const specificMessage =\n          codeHighlightsMessage === err.message\n            ? undefined\n            : codeHighlightsMessage\n        reporter.panic({\n          id: `11901`,\n          context: {\n            filePath: c?.filePath,\n            generalMessage: err.message,\n            specificMessage,\n            origin: err?.origin,\n            hints: err?.hints,\n          },\n        })\n      })\n    } else {\n      reporter.panic({\n        id: `11901`,\n        context: {\n          generalMessage: err.message,\n          origin: err?.origin,\n          hints: err?.hints,\n        },\n      })\n    }\n  })\n}\n\nexport function getResolvedFieldsForPlugin(\n  rootDir: string,\n  pluginName: string\n): {\n  resolvedCompiledGatsbyNode?: string\n} {\n  return {\n    resolvedCompiledGatsbyNode: findCompiledLocalPluginModule(\n      rootDir,\n      pluginName,\n      `gatsby-node`\n    ),\n  }\n}\n\nexport function findCompiledLocalPluginModule(\n  rootDir: string,\n  pluginName: string,\n  moduleName: \"gatsby-config\" | \"gatsby-node\"\n): string | undefined {\n  const compiledPathForPlugin =\n    pluginName === `default-site-plugin`\n      ? `${rootDir}/${COMPILED_CACHE_DIR}`\n      : `${rootDir}/${COMPILED_CACHE_DIR}/plugins/${pluginName}`\n\n  const compiledPathForModule = `${compiledPathForPlugin}/${moduleName}.js`\n\n  const isCompiled = existsSync(compiledPathForModule)\n  if (isCompiled) {\n    return compiledPathForModule\n  }\n\n  return undefined\n}\n"],"mappings":"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"}
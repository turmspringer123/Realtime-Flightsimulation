/// <reference types="node" />
declare class RawBuffer {
    private readonly buffer;
    constructor(b: Buffer | number);
    clear(): void;
    setOffset(offset: number): void;
    flip(): void;
    getOffset(): number;
    getBuffer(): Buffer;
    write(bytes: Buffer): void;
    writeByte(byte: number): void;
    readBytes(length: number): Buffer;
    readInt(): number;
    writeInt(value: number, offset?: number): void;
    readLong(): number;
    writeLong(value: number): void;
    readFloat(): number;
    writeFloat(value: number): void;
    readDouble(): number;
    writeDouble(value: number): void;
    writeString(value: string, fixedLength?: number): void;
    readString8(): string;
    writeString8(value: string): void;
    writeString30(value: string): void;
    readString32(): string;
    writeString32(value: string): void;
    readString64(): string;
    writeString64(value: string): void;
    readString128(): string;
    writeString128(value: string): void;
    readString256(): string;
    writeString256(value: string | null): void;
    readString260(): string;
    writeString260(value: string): void;
    readStringV(): string;
    readString(length: number): string;
    remaining(): number;
}
export { RawBuffer };
//# sourceMappingURL=RawBuffer.d.ts.map